{%- liquid
  assign has_content_below_gallery = false

  for block in section.blocks
    if block.type == 'complementary_products'
      assign has_content_below_gallery = true
      break
    endif

    unless block.settings.show_below_gallery
      continue
    endunless

    if block.type == 'accordion' and block.settings.title != blank and block.settings.content != blank or block.settings.liquid != blank or block.settings.page.content != blank
      assign has_content_below_gallery = true
      break
    elsif block.type == 'description' and product.description != blank
      assign has_content_below_gallery = true
      break
    endif
  endfor

  # タグに基づく購入ボタンの表示制御
  assign show_buy_buttons = true
  assign show_coming_soon = false
  
  for tag in product.tags
    assign tag_downcase = tag | downcase
    if tag_downcase == 'display only' or tag_downcase == 'archive'
      assign show_buy_buttons = false
      break
    elsif tag_downcase == 'coming soon'
      assign show_coming_soon = true
      break
    endif
  endfor
-%}

<style>
  #shopify-section-{{ section.id }} {
    --product-grid: "product-gallery" "product-info" {% if has_content_below_gallery %}"product-content"{% endif %} / minmax(0, 1fr);
  }

  @media screen and (min-width: 1000px) {
    #shopify-section-{{ section.id }} {
      {%- if has_content_below_gallery -%}
        --product-grid: "product-gallery product-info" auto "product-content product-info" minmax(0, 1fr) / minmax(0, {{ 100.0 | minus: section.settings.product_info_size | divided_by: 100.0 }}fr) minmax(0, {{ section.settings.product_info_size | divided_by: 100.0 }}fr);
      {%- else -%}
        --product-grid: "product-gallery product-info" / minmax(0, {{ 100.0 | minus: section.settings.product_info_size | divided_by: 100.0 }}fr) minmax(0, {{ section.settings.product_info_size | divided_by: 100.0 }}fr);
      {%- endif -%}
    }
  }

  /* Coming Soon ボタンのスタイル */
  .coming-soon-button {
    background-color: #e0e0e0 !important;
    color: #666 !important;
    cursor: not-allowed !important;
    opacity: 0.7;
  }
</style>

{%- assign color_scheme_hash = section.settings.color_scheme.settings.background_gradient | default: section.settings.color_scheme.settings.background | md5 -%}
{%- capture product_form_id -%}product-form-main-{{ product.id }}-{{ section.id }}{%- endcapture -%}

<div class="section-spacing section-spacing--tight color-scheme color-scheme--{{ section.settings.color_scheme.id }} color-scheme--bg-{{ color_scheme_hash }}">
  <div class="container {% unless section.settings.container_size == 'full' %}container--{{ section.settings.container_size }}{% endunless %}">
    <product-rerender id="product-info-{{ product.id }}-{{ section.id }}" observe-form="{{ product_form_id }}" allow-partial-rerender>
      <div class="product">
        {%- if product.media.size > 0 -%}
          {%- render 'product-gallery',
              product: product,
              product_form_id: product_form_id,
              desktop_layout: section.settings.desktop_media_layout,
              mobile_controls: section.settings.mobile_controls,
              enable_media_autoplay: section.settings.enable_media_autoplay,
              enable_video_looping: section.settings.enable_video_looping,
              enable_image_zoom: section.settings.enable_image_zoom,
              max_image_zoom_level: section.settings.max_image_zoom_level -%}
        {%- endif -%}

        {%- render 'product-info', 
          product: product, 
          product_form_id: product_form_id,
          center_basic_info: section.settings.center_basic_info, 
          has_content_below_gallery: has_content_below_gallery, 
          context: 'main_product',
          show_buy_buttons: show_buy_buttons,
          show_coming_soon: show_coming_soon
        -%}

        {%- comment -%}On Prestige, some content may be on the left part below the product gallery{%- endcomment -%}
        {%- if has_content_below_gallery -%}
          <div id="product-extra-information" class="product-content-below-gallery empty:hidden scroll-margin-offset">
            {%- for block in section.blocks -%}
              {%- unless block.settings.show_below_gallery -%}
                {%- continue -%}
              {%- endunless -%}

              {%- case block.type -%}
                {%- when 'description' -%}
                  {%- if product.description != blank -%}
                    {%- if block.settings.collapse_content -%}
                      {%- assign accordion_title = 'product.general.description' | t -%}
                      {%- render 'accordion', title: accordion_title, content: product.description, prose_content: true, size: 'lg', block: block -%}
                    {%- else -%}
                      <div class="product-content-below-gallery__description prose">
                        {{- product.description -}}
                      </div>
                    {%- endif -%}
                  {%- endif -%}

                {%- when 'accordion' -%}
                  {%- liquid
                    assign accordion_title = block.settings.page.title | default: block.settings.title 
                    assign accordion_content = block.settings.page.content | default: block.settings.liquid | default: block.settings.content

                    if accordion_title != blank and accordion_content != blank
                      render 'accordion', title: accordion_title, content: accordion_content, size: 'lg', prose_content: true, icon: block.settings.icon, custom_icon: block.settings.custom_icon, block: block
                    endif
                  -%}

                {%- when 'complementary_products' -%}
                  {%- render 'complementary-products', product: product, block: block -%}
              {%- endcase -%}
            {%- endfor -%}
          </div>
        {%- endif -%}
      </div>
    </product-rerender>
  </div>
</div>

{%- comment -%}スティッキーバーの購入ボタン制御{%- endcomment -%}
{%- if section.settings.show_sticky_add_to_cart and product.available and show_buy_buttons -%}
  <product-rerender id="{{ product_form_id }}-sticky-bar" observe-form="{{ product_form_id }}">
    <product-sticky-bar form="{{ product_form_id }}" class="product-sticky-bar">
      <div class="product-sticky-bar__info sm-max:hidden">
        <div class="h-stack gap-6">
          {%- if product.media.size > 0 -%}
            {%- assign default_media = product.selected_or_first_available_variant.featured_media | default: product.featured_media -%}
            {{- default_media | image_url: width: default_media.width | image_tag: loading: 'lazy', sizes: '60px', widths: '60,120,180' -}}
          {%- endif -%}

          <div class="v-stack">
            <span class="h6">{{ product.title }}</span>

            {%- if product.selected_or_first_available_variant != nil -%}
              {%- render 'price-list', variant: product.selected_or_first_available_variant, hide_unit_price: true, context: 'card' -%}
            {%- endif -%}
          </div>
        </div>
      </div>

      <buy-buttons class="buy-buttons" template="{{ product.template_suffix | escape }}" form="{{ product_form_id }}">
        {%- if show_coming_soon -%}
          {%- render 'button', content: 'Coming Soon', style: 'solid', disabled: true, class: 'coming-soon-button' -%}
        {%- else -%}
          {%- liquid
            assign button_disabled = false
            assign button_style = 'solid'

            if product.selected_or_first_available_variant == nil
              assign button_disabled = true
              assign button_style = 'outline'
              assign button_content = 'product.general.unavailable_button' | t
            elsif product.selected_or_first_available_variant.available == false
              assign button_disabled = true
              assign button_style = 'outline'
              assign button_content = 'product.general.sold_out_button' | t
            else
              if product.template_suffix contains 'pre-order'
                assign button_content = 'product.general.pre_order_button' | t
              else
                assign button_content = 'product.general.add_to_cart_button' | t
              endif
            endif
          -%}

          {%- render 'button', content: button_content, style: button_style, type: 'submit', form: product_form_id, disabled: button_disabled -%}
        {%- endif -%}
      </buy-buttons>
    </product-sticky-bar>
  </product-rerender>
{%- elsif section.settings.show_sticky_add_to_cart and show_coming_soon -%}
  {%- comment -%}Coming Soon用のスティッキーバー{%- endcomment -%}
  <div class="product-sticky-bar">
    <div class="product-sticky-bar__info sm-max:hidden">
      <div class="h-stack gap-6">
        {%- if product.media.size > 0 -%}
          {%- assign default_media = product.selected_or_first_available_variant.featured_media | default: product.featured_media -%}
          {{- default_media | image_url: width: default_media.width | image_tag: loading: 'lazy', sizes: '60px', widths: '60,120,180' -}}
        {%- endif -%}

        <div class="v-stack">
          <span class="h6">{{ product.title }}</span>

          {%- if product.selected_or_first_available_variant != nil -%}
            {%- render 'price-list', variant: product.selected_or_first_available_variant, hide_unit_price: true, context: 'card' -%}
          {%- endif -%}
        </div>
      </div>
    </div>

    <div class="buy-buttons">
      {%- render 'button', content: 'Coming Soon', style: 'solid', disabled: true, class: 'coming-soon-button' -%}
    </div>
  </div>
{%- endif -%}

{%- comment -%}
IMPLEMENTATION NOTE: Shopify does not currently allows to render a given section within the context of a given product. However,
when rendering the quick buy drawers/popovers, we want to be able to re-use the merchant's choices (such as the selector type). This
is however only possible by rendering the whole product page, and extracting the relevant part. Here, we therefore render the
quick buy information in a template, that will be extracted in JS, which ensures it is not visible in the main product page
{%- endcomment -%}
{%- if show_buy_buttons -%}
  {%- render 'product-quick-buy', product: product -%}
{%- endif -%}

<script>
  // We save the product ID in local storage to be eventually used for recently viewed section
  try {
    let recentlyViewedProducts = JSON.parse(localStorage.getItem('theme:recently-viewed-products') || '[]');

    recentlyViewedProducts = recentlyViewedProducts.filter(item => item !== {{ product.id }}); // Delete product to remove to the start
    recentlyViewedProducts.unshift({{ product.id }}); // Add at the start

    localStorage.setItem('theme:recently-viewed-products', JSON.stringify(recentlyViewedProducts));
  } catch (e) {
    // Safari in private mode does not allow setting item, we silently fail
  }
</script>

{% schema %}
{
  "name": "t:sections.main_product.name",
  "class": "shopify-section--main-product",
  "tag": "section",
  "settings": [
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:global.colors.scheme",
      "default": "scheme-1"
    },
    {
      "type": "select",
      "id": "container_size",
      "label": "t:global.sizes.section_width",
      "options": [
        {
          "value": "lg",
          "label": "t:global.sizes.large"
        },
        {
          "value": "xl",
          "label": "t:global.sizes.x_large"
        },
        {
          "value": "full",
          "label": "t:global.sizes.full_width"
        }
      ],
      "default": "lg"
    },
    {
      "type": "range",
      "id": "product_info_size",
      "label": "t:sections.main_product.product_info_size",
      "info": "t:sections.main_product.product_info_size_info",
      "min": 30,
      "max": 60,
      "step": 1,
      "unit": "%",
      "default": 35
    },
    {
      "type": "checkbox",
      "id": "show_sticky_add_to_cart",
      "label": "t:sections.main_product.show_sticky_add_to_cart",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "center_basic_info",
      "label": "t:sections.main_product.center_basic_info",
      "info": "t:sections.main_product.center_basic_info_info",
      "default": false
    },
    {
      "type": "select",
      "id": "desktop_media_layout",
      "label": "t:sections.main_product.desktop_media_layout",
      "options": [
        {
          "value": "grid",
          "label": "t:sections.main_product.desktop_media_layout_options.grid"
        },
        {
          "value": "carousel_thumbnails_bottom",
          "label": "t:sections.main_product.desktop_media_layout_options.carousel_thumbnails_bottom"
        }
      ],
      "default": "grid"
    },
    {
      "type": "select",
      "id": "mobile_controls",
      "label": "t:sections.main_product.mobile_controls",
      "options": [
        {
          "value": "dots",
          "label": "t:sections.main_product.mobile_controls_options.dots"
        },
        {
          "value": "thumbnails",
          "label": "t:sections.main_product.mobile_controls_options.thumbnails"
        }
      ],
      "default": "dots"
    },
    {
      "type": "checkbox",
      "id": "enable_media_autoplay",
      "label": "t:sections.main_product.enable_media_autoplay",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "enable_video_looping",
      "label": "t:sections.main_product.enable_video_looping",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "enable_image_zoom",
      "label": "t:sections.main_product.image_zoom_enable",
      "default": true
    },
    {
      "type": "range",
      "id": "max_image_zoom_level",
      "min": 1,
      "max": 4,
      "step": 0.5,
      "label": "t:sections.main_product.image_zoom_max_level",
      "default": 3
    }
  ],
  "blocks": [
    {
      "type": "@app"
    },
    {
      "type": "vendor",
      "name": "t:sections.main_product.blocks.vendor.name",
      "limit": 1
    },
    {
      "type": "title",
      "name": "t:sections.main_product.blocks.title.name",
      "limit": 1
    },
    {
      "type": "price",
      "name": "t:sections.main_product.blocks.price.name",
      "limit": 1
    },
    {
      "type": "description",
      "name": "t:sections.main_product.blocks.description.name",
      "limit": 1
    },
    {
      "type": "variant_picker",
      "name": "t:sections.main_product.blocks.variant_picker.name",
      "limit": 1
    },
    {
      "type": "quantity_selector",
      "name": "t:sections.main_product.blocks.quantity_selector.name",
      "limit": 1
    },
    {
      "type": "buy_buttons",
      "name": "t:sections.main_product.blocks.buy_buttons.name",
      "limit": 1
    }
  ]
}
{% endschema %}