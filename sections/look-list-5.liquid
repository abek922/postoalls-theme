{% style %}
  .look-page {
    position: relative;
    max-width: 100%;
    margin: 0 auto;
  }

  .look-page__content {
    position: relative;
    max-width: 1400px;
    margin: 0 auto;
    padding: 0 2rem;
  }

  .look-page__look {
    display: none;
    grid-template-columns: 1fr;
    gap: 3rem;
    margin-bottom: 4rem;
  }

  .look-page__look.is-active {
    display: grid;
  }

  /* Look間のナビゲーション矢印 */
  .look-page__main-nav-button {
    position: fixed;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(255, 255, 255, 0.9);
    border: none;
    border-radius: 0;
    width: 50px;
    height: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.2s ease;
    z-index: 100;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  }

  .look-page__main-nav-button:hover {
    background: rgba(255, 255, 255, 1);
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
  }

  .look-page__main-nav-button--prev {
    left: 1rem;
  }

  .look-page__main-nav-button--next {
    right: 1rem;
  }

  .look-page__main-nav-button svg {
    width: 16px;
    height: 16px;
    fill: none;
    stroke: currentColor;
    stroke-width: 2;
    color: #333;
  }

  /* 画像カルーセル部分 */
  .look-page__image-carousel {
    position: relative;
  }

  .look-page__image-container {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    background: #f8f8f8;
    border-radius: 0;
    overflow: hidden;
    min-height: 400px;
  }

  .look-page__carousel-wrapper {
    position: relative;
    width: 100%;
    overflow: hidden;
  }

  .look-page__carousel-track {
    display: flex;
    transition: transform 0.4s ease;
  }

  .look-page__carousel-slide {
    flex-shrink: 0;
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .look-page__image {
    max-width: 100%;
    height: auto;
    display: block;
  }

  .look-page__image-placeholder {
    width: 100%;
    height: 400px;
    background: #f5f5f5;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #ccc;
  }

  /* 画像のサムネイル（Look内の画像切り替え用） */
  .look-page__image-thumbnails {
    display: flex;
    gap: 0.75rem;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    margin-top: 1.5rem;
    padding: 0 1rem;
  }

  .look-page__image-thumbnail {
    flex-shrink: 0;
    width: 50px;
    height: 50px;
    border-radius: 0;
    overflow: hidden;
    cursor: pointer;
    transition: all 0.2s ease;
    border: 2px solid transparent;
    opacity: 0.5;
  }

  .look-page__image-thumbnail.is-active {
    border-color: rgb(var(--text-color));
    opacity: 1;
  }

  .look-page__image-thumbnail:hover {
    opacity: 1;
  }

  .look-page__image-thumbnail img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .look-page__sidebar {
    display: grid;
    gap: 2rem;
  }

  .look-page__look-title {
    font-size: 1.25rem;
    font-weight: 300;
    letter-spacing: 0.1em;
    text-transform: uppercase;
    color: rgb(var(--text-color));
    line-height: 1.3;
  }

  /* コメント（日本語・英語） */
  .look-page__comments {
    line-height: 1.6;
  }

  .look-page__comment {
    font-size: 0.9rem;
    color: rgba(var(--text-color), 0.8);
  }

  /* Alignment Classes */
  .text-left {
    text-align: left;
  }

  .text-center {
    text-align: center;
  }

  .text-right {
    text-align: right;
  }

  .look-page__products {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
    gap: 1.5rem;
  }

  .look-page__product-card {
    background: white;
    border: 1px solid rgba(var(--text-color), 0.08);
    border-radius: 0;
    overflow: hidden;
    transition: all 0.25s ease;
    text-decoration: none;
    color: inherit;
    display: block;
  }

  .look-page__product-card:hover {
    border-color: rgba(var(--text-color), 0.2);
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.08);
    text-decoration: none;
    color: inherit;
  }

  .look-page__product-image {
    width: 100%;
    aspect-ratio: 1;
    object-fit: cover;
    background: #f8f8f8;
  }

  .look-page__product-image.placeholder {
    display: flex;
    align-items: center;
    justify-content: center;
    color: rgba(var(--text-color), 0.3);
  }

  .look-page__product-info {
    padding: 1rem;
  }

  .look-page__product-title {
    font-size: 0.8rem;
    font-weight: 400;
    margin: 0 0 0.5rem 0;
    line-height: 1.3;
    color: rgb(var(--text-color));
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .look-page__product-price {
    font-size: 0.8rem;
    color: rgba(var(--text-color), 0.7);
    margin: 0;
  }

  .look-page__product-price .price {
    font-weight: 500;
  }

  .look-page__product-price .price--compare {
    text-decoration: line-through;
    margin-right: 0.5rem;
    opacity: 0.6;
  }

  /* モバイル対応 */
  @media screen and (max-width: 767px) {
    .look-page__content {
      padding: 0 1rem;
    }

    .look-page__image-container {
      min-height: 300px;
    }

    .look-page__image-placeholder {
      height: 300px;
    }

    .look-page__image-thumbnails {
      gap: 0.5rem;
      margin-top: 1rem;
    }

    .look-page__image-thumbnail {
      width: 40px;
      height: 40px;
    }

    .look-page__look {
      gap: 2rem;
      margin-bottom: 3rem;
    }

    .look-page__main-nav-button {
      width: 40px;
      height: 40px;
    }

    .look-page__main-nav-button--prev {
      left: 0.5rem;
    }

    .look-page__main-nav-button--next {
      right: 0.5rem;
    }

    .look-page__main-nav-button svg {
      width: 12px;
      height: 12px;
    }

    .look-page__products {
      grid-template-columns: repeat(2, 1fr);
      gap: 1rem;
    }
  }

  /* タブレット対応 */
  @media screen and (min-width: 768px) {
    .look-page__look {
      grid-template-columns: 2fr 1fr;
      gap: 4rem;
      align-items: start;
    }

    .look-page__products {
      grid-template-columns: 1fr;
      gap: 1rem;
    }

    .look-page__image-thumbnails {
      gap: 1rem;
    }

    .look-page__image-thumbnail {
      width: 60px;
      height: 60px;
    }
  }

  /* デスクトップ対応 */
  @media screen and (min-width: 1024px) {
    .look-page__products {
      grid-template-columns: repeat(2, 1fr);
    }

    .look-page__image-thumbnail {
      width: 70px;
      height: 70px;
    }
  }

  @media screen and (min-width: 1200px) {
    .look-page__look {
      gap: 5rem;
    }
  }
{% endstyle %}

<div class="look-page color-scheme color-scheme--{{ section.settings.color_scheme.id }}">
  <!-- Look間のナビゲーション矢印 -->
  {%- if section.blocks.size > 1 -%}
    <button class="look-page__main-nav-button look-page__main-nav-button--prev" 
            type="button"
            aria-label="Previous look">
      <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <polyline points="14,7 9,12 14,17"></polyline>
      </svg>
    </button>
    <button class="look-page__main-nav-button look-page__main-nav-button--next" 
            type="button"
            aria-label="Next look">
      <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <polyline points="10,7 15,12 10,17"></polyline>
      </svg>
    </button>
  {%- endif -%}

  <div class="look-page__content">
    {%- assign look_index = 0 -%}
    {%- for block in section.blocks -%}
      <div class="look-page__look {% if look_index == 0 %}is-active{% endif %}" 
           data-look-index="{{ look_index }}"
           {{ block.shopify_attributes }}>
        
        <div class="look-page__image-carousel">
          <div class="look-page__image-container">
            <div class="look-page__carousel-wrapper">
              <div class="look-page__carousel-track" data-carousel-track>
                {%- for i in (1..6) -%}
                  {%- assign image_key = 'image_' | append: i -%}
                  {%- assign current_image = block.settings[image_key] -%}
                  {%- assign display_title = block.settings.title_ja | default: block.settings.title_en | default: 'Look' -%}
                  
                  {%- if current_image != blank -%}
                    <div class="look-page__carousel-slide">
                      {{ current_image | image_url: width: 1200 | image_tag: class: 'look-page__image', alt: display_title, loading: 'lazy' }}
                    </div>
                  {%- endif -%}
                {%- endfor -%}
                
                {%- if block.settings.image_1 == blank and block.settings.image_2 == blank and block.settings.image_3 == blank and block.settings.image_4 == blank and block.settings.image_5 == blank and block.settings.image_6 == blank -%}
                  <div class="look-page__carousel-slide">
                    <div class="look-page__image-placeholder">
                      {{ 'image' | placeholder_svg_tag }}
                    </div>
                  </div>
                {%- endif -%}
              </div>
            </div>
          </div>

          {%- assign image_count = 0 -%}
          {%- for i in (1..6) -%}
            {%- assign image_key = 'image_' | append: i -%}
            {%- if block.settings[image_key] != blank -%}
              {%- assign image_count = image_count | plus: 1 -%}
            {%- endif -%}
          {%- endfor -%}

          {%- if image_count > 1 -%}
            <div class="look-page__image-thumbnails">
              {%- assign display_title = block.settings.title_ja | default: block.settings.title_en | default: 'Look' -%}
              {%- for i in (1..6) -%}
                {%- assign image_key = 'image_' | append: i -%}
                {%- assign current_image = block.settings[image_key] -%}
                
                {%- if current_image != blank -%}
                  <div class="look-page__image-thumbnail {% if i == 1 %}is-active{% endif %}" 
                       data-image-index="{{ i | minus: 1 }}">
                    {{ current_image | image_url: width: 200 | image_tag: alt: display_title, loading: 'lazy' }}
                  </div>
                {%- endif -%}
              {%- endfor -%}
            </div>
          {%- endif -%}
        </div>

        <div class="look-page__sidebar">
          {%- assign has_title = false -%}
          {%- if block.settings.title_ja != blank or block.settings.title_en != blank -%}
            {%- assign has_title = true -%}
          {%- endif -%}
          
          {%- if has_title -%}
            {%- assign title_tag = block.settings.heading_tag | default: 'h2' -%}
            <{{ title_tag }} class="look-page__look-title text-{{ block.settings.title_alignment }}" style="
              margin-top: {{ block.settings.title_margin_top }}px;
              margin-bottom: {{ block.settings.title_margin_bottom }}px;
            ">
              {%- if request.locale.iso_code == 'ja' -%}
                {{ block.settings.title_ja | default: block.settings.title_en }}
              {%- else -%}
                {{ block.settings.title_en | default: block.settings.title_ja }}
              {%- endif -%}
            </{{ title_tag }}>
          {%- endif -%}

          {%- assign has_comment = false -%}
          {%- if block.settings.comment_ja != blank or block.settings.comment_en != blank -%}
            {%- assign has_comment = true -%}
          {%- endif -%}
          
          {%- if has_comment -%}
            <div class="look-page__comments text-{{ block.settings.comment_alignment }}" style="
              margin-top: {{ block.settings.comment_margin_top }}px;
              margin-bottom: {{ block.settings.comment_margin_bottom }}px;
            ">
              <div class="look-page__comment">
                {%- if request.locale.iso_code == 'ja' -%}
                  {{ block.settings.comment_ja | default: block.settings.comment_en | newline_to_br }}
                {%- else -%}
                  {{ block.settings.comment_en | default: block.settings.comment_ja | newline_to_br }}
                {%- endif -%}
              </div>
            </div>
          {%- endif -%}

          <div class="look-page__products">
            {%- for i in (1..6) -%}
              {%- assign product_key = 'product_' | append: i -%}
              {%- assign product = all_products[block.settings[product_key]] -%}
              
              {%- if product and product != empty -%}
                <a href="{{ product.url }}" class="look-page__product-card">
                  {%- if product.featured_image -%}
                    {{ product.featured_image | image_url: width: 400 | image_tag: class: 'look-page__product-image', alt: product.title, loading: 'lazy' }}
                  {%- else -%}
                    <div class="look-page__product-image placeholder">
                      <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                        <rect x="3" y="3" width="18" height="18" rx="2" stroke="currentColor" stroke-width="2"/>
                        <circle cx="8.5" cy="8.5" r="1.5" stroke="currentColor" stroke-width="2"/>
                        <path d="M21 15L16 10L5 21" stroke="currentColor" stroke-width="2"/>
                      </svg>
                    </div>
                  {%- endif -%}
                  
                  <div class="look-page__product-info">
                    <h3 class="look-page__product-title">{{ product.title }}</h3>
                    <div class="look-page__product-price">
                      {%- if product.compare_at_price > product.price -%}
                        <span class="price price--compare">{{ product.compare_at_price | money }}</span>
                      {%- endif -%}
                      <span class="price">{{ product.price | money }}</span>
                    </div>
                  </div>
                </a>
              {%- endif -%}
            {%- endfor -%}
          </div>
        </div>
      </div>
      {%- assign look_index = look_index | plus: 1 -%}
    {%- endfor -%}
  </div>
</div>

<script>
(function() {
  function initLookPage() {
    const lookPageContent = document.querySelector('.look-page__content');
    if (!lookPageContent) return;

    let currentLookIndex = 0;
    const looks = Array.from(document.querySelectorAll('.look-page__look'));
    const mainPrevButton = document.querySelector('.look-page__main-nav-button--prev');
    const mainNextButton = document.querySelector('.look-page__main-nav-button--next');
    
    if (looks.length === 0) return;

    // 各Lookの画像カルーセルを初期化
    looks.forEach((look, lookIdx) => {
      const carousel = look.querySelector('.look-page__carousel-wrapper');
      const track = look.querySelector('.look-page__carousel-track');
      const slides = Array.from(track.querySelectorAll('.look-page__carousel-slide'));
      const thumbnails = Array.from(look.querySelectorAll('.look-page__image-thumbnail'));
      
      if (slides.length === 0) return;

      let currentSlideIndex = 0;
      let touchStartX = 0;
      let touchEndX = 0;
      let touchStartY = 0;
      let touchEndY = 0;
      const minSwipeDistance = 50;

      function updateCarousel(index) {
        if (index < 0 || index >= slides.length) return;
        
        currentSlideIndex = index;
        const offset = -index * 100;
        track.style.transform = `translateX(${offset}%)`;

        thumbnails.forEach((thumb, i) => {
          if (i === index) {
            thumb.classList.add('is-active');
          } else {
            thumb.classList.remove('is-active');
          }
        });
      }

      function showNextSlide() {
        const newIndex = currentSlideIndex < slides.length - 1 ? currentSlideIndex + 1 : 0;
        updateCarousel(newIndex);
      }

      function showPrevSlide() {
        const newIndex = currentSlideIndex > 0 ? currentSlideIndex - 1 : slides.length - 1;
        updateCarousel(newIndex);
      }

      function handleSlideSwipe() {
        const diffX = touchEndX - touchStartX;
        const diffY = touchEndY - touchStartY;
        
        if (Math.abs(diffX) > Math.abs(diffY) && Math.abs(diffX) > minSwipeDistance) {
          if (diffX > 0) {
            showPrevSlide();
          } else {
            showNextSlide();
          }
        }
      }

      // サムネイルクリック
      thumbnails.forEach((thumbnail) => {
        thumbnail.addEventListener('click', function(e) {
          e.preventDefault();
          const index = parseInt(this.getAttribute('data-image-index'), 10);
          if (!isNaN(index)) {
            updateCarousel(index);
          }
        });
      });

      // スワイプイベント
      carousel.addEventListener('touchstart', function(e) {
        touchStartX = e.changedTouches[0].screenX;
        touchStartY = e.changedTouches[0].screenY;
      }, { passive: true });

      carousel.addEventListener('touchend', function(e) {
        touchEndX = e.changedTouches[0].screenX;
        touchEndY = e.changedTouches[0].screenY;
        handleSlideSwipe();
      }, { passive: true });

      updateCarousel(0);
    });

    // Look間のナビゲーション
    let lookTouchStartX = 0;
    let lookTouchEndX = 0;
    let lookTouchStartY = 0;
    let lookTouchEndY = 0;
    const minLookSwipeDistance = 80;

    function showLook(index) {
      if (index < 0 || index >= looks.length) return;
      
      currentLookIndex = index;

      looks.forEach((look, i) => {
        if (i === index) {
          look.classList.add('is-active');
        } else {
          look.classList.remove('is-active');
        }
      });

      window.scrollTo({
        top: 0,
        behavior: 'smooth'
      });
    }

    function showPreviousLook() {
      const newIndex = currentLookIndex > 0 ? currentLookIndex - 1 : looks.length - 1;
      showLook(newIndex);
    }

    function showNextLook() {
      const newIndex = currentLookIndex < looks.length - 1 ? currentLookIndex + 1 : 0;
      showLook(newIndex);
    }

    function handleLookSwipe() {
      const diffX = lookTouchEndX - lookTouchStartX;
      const diffY = lookTouchEndY - lookTouchStartY;
      
      if (Math.abs(diffX) > Math.abs(diffY) && Math.abs(diffX) > minLookSwipeDistance) {
        if (diffX > 0) {
          showPreviousLook();
        } else {
          showNextLook();
        }
      }
    }

    // メインナビゲーションボタン
    if (mainPrevButton) {
      mainPrevButton.addEventListener('click', function(e) {
        e.preventDefault();
        showPreviousLook();
      });
    }

    if (mainNextButton) {
      mainNextButton.addEventListener('click', function(e) {
        e.preventDefault();
        showNextLook();
      });
    }

    // Look間のスワイプ（サイドバー領域でのみ動作）
    looks.forEach((look) => {
      const sidebar = look.querySelector('.look-page__sidebar');
      if (sidebar) {
        sidebar.addEventListener('touchstart', function(e) {
          lookTouchStartX = e.changedTouches[0].screenX;
          lookTouchStartY = e.changedTouches[0].screenY;
        }, { passive: true });

        sidebar.addEventListener('touchend', function(e) {
          lookTouchEndX = e.changedTouches[0].screenX;
          lookTouchEndY = e.changedTouches[0].screenY;
          handleLookSwipe();
        }, { passive: true });
      }
    });

    // キーボードナビゲーション
    document.addEventListener('keydown', function(e) {
      if (e.key === 'ArrowLeft') {
        e.preventDefault();
        showPreviousLook();
      } else if (e.key === 'ArrowRight') {
        e.preventDefault();
        showNextLook();
      }
    });

    showLook(0);
  }

  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initLookPage);
  } else {
    initLookPage();
  }

  if (typeof Shopify !== 'undefined' && Shopify.designMode) {
    document.addEventListener('shopify:section:load', initLookPage);
  }
})();
</script>

{% schema %}
{
  "name": "Look",
  "class": "shopify-section--look-page",
  "tag": "section",
  "settings": [
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "Color scheme",
      "default": "scheme-1"
    }
  ],
  "blocks": [
    {
      "type": "look",
      "name": "Look",
      "settings": [
        {
          "type": "header",
          "content": "Title Settings"
        },
        {
          "type": "text",
          "id": "title_ja",
          "label": "Title (Japanese)",
          "default": "Look Title"
        },
        {
          "type": "text",
          "id": "title_en",
          "label": "Title (English)",
          "default": "Look Title"
        },
        {
          "type": "select",
          "id": "heading_tag",
          "label": "Heading Style",
          "options": [
            {
              "value": "h1",
              "label": "H1"
            },
            {
              "value": "h2",
              "label": "H2"
            },
            {
              "value": "h3",
              "label": "H3"
            },
            {
              "value": "h4",
              "label": "H4"
            },
            {
              "value": "h5",
              "label": "H5"
            },
            {
              "value": "h6",
              "label": "H6"
            }
          ],
          "default": "h2"
        },
        {
          "type": "select",
          "id": "title_alignment",
          "label": "Title Alignment",
          "options": [
            {
              "value": "left",
              "label": "Left"
            },
            {
              "value": "center",
              "label": "Center"
            },
            {
              "value": "right",
              "label": "Right"
            }
          ],
          "default": "center"
        },
        {
          "type": "range",
          "id": "title_margin_top",
          "min": 0,
          "max": 100,
          "step": 5,
          "unit": "px",
          "label": "Title Margin Top",
          "default": 0
        },
        {
          "type": "range",
          "id": "title_margin_bottom",
          "min": 0,
          "max": 100,
          "step": 5,
          "unit": "px",
          "label": "Title Margin Bottom",
          "default": 20
        },
        {
          "type": "header",
          "content": "Comment Settings"
        },
        {
          "type": "textarea",
          "id": "comment_ja",
          "label": "Comment (Japanese)",
          "info": "日本語のコメント"
        },
        {
          "type": "textarea",
          "id": "comment_en",
          "label": "Comment (English)",
          "info": "英語のコメント"
        },
        {
          "type": "select",
          "id": "comment_alignment",
          "label": "Comment Alignment",
          "options": [
            {
              "value": "left",
              "label": "Left"
            },
            {
              "value": "center",
              "label": "Center"
            },
            {
              "value": "right",
              "label": "Right"
            }
          ],
          "default": "center"
        },
        {
          "type": "range",
          "id": "comment_margin_top",
          "min": 0,
          "max": 100,
          "step": 5,
          "unit": "px",
          "label": "Comment Margin Top",
          "default": 15
        },
        {
          "type": "range",
          "id": "comment_margin_bottom",
          "min": 0,
          "max": 100,
          "step": 5,
          "unit": "px",
          "label": "Comment Margin Bottom",
          "default": 20
        },
        {
          "type": "header",
          "content": "Look Images"
        },
        {
          "type": "image_picker",
          "id": "image_1",
          "label": "Image 1"
        },
        {
          "type": "image_picker",
          "id": "image_2",
          "label": "Image 2"
        },
        {
          "type": "image_picker",
          "id": "image_3",
          "label": "Image 3"
        },
        {
          "type": "image_picker",
          "id": "image_4",
          "label": "Image 4"
        },
        {
          "type": "image_picker",
          "id": "image_5",
          "label": "Image 5"
        },
        {
          "type": "image_picker",
          "id": "image_6",
          "label": "Image 6"
        },
        {
          "type": "header",
          "content": "Products"
        },
        {
          "type": "product",
          "id": "product_1",
          "label": "Product 1"
        },
        {
          "type": "product",
          "id": "product_2",
          "label": "Product 2"
        },
        {
          "type": "product",
          "id": "product_3",
          "label": "Product 3"
        },
        {
          "type": "product",
          "id": "product_4",
          "label": "Product 4"
        },
        {
          "type": "product",
          "id": "product_5",
          "label": "Product 5"
        },
        {
          "type": "product",
          "id": "product_6",
          "label": "Product 6"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Look List 1",
      "category": "POST O'ALLS Look",
      "blocks": [
        {
          "type": "look"
        }
      ]
    }
  ]
}
{% endschema %}