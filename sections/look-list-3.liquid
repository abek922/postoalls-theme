{% style %}
.look-section-{{ section.id }} {
  padding-top: 1rem;
}

.look-wrapper-{{ section.id }} {
  margin-top: {{ section.settings.section_margin_top }}px;
  margin-bottom: {{ section.settings.section_margin_bottom }}px;
  margin-left: {{ section.settings.section_margin_left }}px;
  margin-right: {{ section.settings.section_margin_right }}px;
}

.look-section-{{ section.id }} .top-image {
  padding: 10px 0;
}

.look-section-{{ section.id }} .look-list-3 {
  display: flex;
  flex-wrap: wrap;
  width: 100%;
  margin: 1rem 0 2rem;
  gap: {{ section.settings.image_gap }}px;
}

.look-section-{{ section.id }} .look-list-3 .look-item {
  width: calc((100% / {{ section.settings.pc_columns }}) - ({{ section.settings.image_gap }}px * ({{ section.settings.pc_columns }} - 1) / {{ section.settings.pc_columns }}));
  margin: 0px;
  text-align: center;
}

.look-section-{{ section.id }} .look-list-3 .look-item a {
  cursor: pointer;
}

.look-section-{{ section.id }} .look-list-3 .look-item a img {
  width: 100%;
  margin: 0%;
  transition: opacity 0.2s ease;
}

.look-section-{{ section.id }} .look-list-3 .look-item a:hover img {
  opacity: 0.8;
}

.look-section-{{ section.id }} .caption {
  margin-top: 1rem;
  text-align: left;
  font-size: 10px;
}

.look-section-{{ section.id }} .icon--placeholder {
  width: 100%;
  height: 300px;
  background: #f5f5f5;
  display: flex;
  align-items: center;
  justify-content: center;
  color: #ccc;
}

/* モーダルスタイル */
.image-modal-{{ section.id }} {
  display: none;
  position: fixed;
  z-index: 9999;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.9);
}

.image-modal-{{ section.id }}.active {
  display: flex;
  align-items: center;
  justify-content: center;
  animation: fadeIn 0.2s ease;
}

.image-modal-{{ section.id }} .image-modal__content {
  position: relative;
  max-width: 90%;
  max-height: 90vh;
  margin: auto;
}

.image-modal-{{ section.id }} .image-modal__image {
  width: 100%;
  height: auto;
  max-height: 90vh;
  object-fit: contain;
  display: block;
}

.image-modal-{{ section.id }} .image-modal__close {
  position: absolute;
  top: 20px;
  right: 20px;
  color: white;
  font-size: 40px;
  font-weight: 300;
  cursor: pointer;
  background: rgba(0, 0, 0, 0.5);
  width: 50px;
  height: 50px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  border: none;
  transition: background 0.2s ease;
  z-index: 10000;
}

.image-modal-{{ section.id }} .image-modal__close:hover {
  background: rgba(0, 0, 0, 0.8);
}

.image-modal-{{ section.id }} .image-modal__nav {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  background: rgba(255, 255, 255, 0.8);
  border: none;
  width: 50px;
  height: 50px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: background 0.2s ease;
  z-index: 10000;
}

.image-modal-{{ section.id }} .image-modal__nav:hover {
  background: rgba(255, 255, 255, 0.95);
}

.image-modal-{{ section.id }} .image-modal__nav--prev {
  left: 20px;
}

.image-modal-{{ section.id }} .image-modal__nav--next {
  right: 20px;
}

.image-modal-{{ section.id }} .image-modal__nav svg {
  width: 24px;
  height: 24px;
}

/* ローディング中のスタイル */
.image-modal-{{ section.id }} .image-modal__image.loading {
  opacity: 0.5;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@media screen and (max-width: 768px) {
  .look-section-{{ section.id }} .top-image {
    width: 100vw;
    margin: 0 calc(50% - 50vw);
    padding: 10px 0 20px;
  }
  
  .look-section-{{ section.id }} .look-list-3 {
    margin: 2rem 0;
  }
  
  {% assign sp_cols = section.settings.sp_columns | plus: 0 %}
  .look-section-{{ section.id }} .look-list-3 .look-item {
    width: calc((100% / {{ sp_cols }}) - ({{ section.settings.image_gap }}px * ({{ sp_cols }} - 1) / {{ sp_cols }}));
    margin: 0px;
  }
  
  .image-modal-{{ section.id }} .image-modal__close {
    top: 10px;
    right: 10px;
    width: 40px;
    height: 40px;
    font-size: 30px;
  }
  
  .image-modal-{{ section.id }} .image-modal__nav {
    width: 40px;
    height: 40px;
  }
  
  .image-modal-{{ section.id }} .image-modal__nav--prev {
    left: 10px;
  }
  
  .image-modal-{{ section.id }} .image-modal__nav--next {
    right: 10px;
  }
}
{% endstyle %}

<div class="look-section-{{ section.id }}">
  <div class="look-wrapper-{{ section.id }}">
    <div class="page-width">
      {% if section.settings.top_image != blank %}
      <div class="top-image">
        <img src="{{ section.settings.top_image | image_url: width: 2000 }}" 
             alt="{{ section.settings.top_image_alt | escape }}"
             width="{{ section.settings.top_image.width }}"
             height="{{ section.settings.top_image.height }}"
             loading="lazy">
      </div>
      {% endif %}

      <div class="look-list-3">
        {% for block in section.blocks limit: section.blocks.size %}
          {% if block.type == 'image' %}
            {% if block.settings.image != blank %}
            <div class="look-item" {{ block.shopify_attributes }}>
              <a href="#" class="look-image-trigger-{{ section.id }}" data-index="{{ forloop.index0 }}">
                <img class="gallery__image"
                     src="{{ block.settings.image | image_url: width: 1200 }}"
                     data-large="{{ block.settings.image | image_url: width: 2048 }}"
                     width="{{ block.settings.image.width }}"
                     height="{{ block.settings.image.height }}"
                     alt="{{ block.settings.image.alt | escape }}"
                     loading="lazy">
              </a>
              <div class="caption">
                {{ block.settings.custom_html }}
              </div>
            </div>
            {% else %}
            <div class="look-item" {{ block.shopify_attributes }}>
              {{ 'image' | placeholder_svg_tag: 'icon icon--placeholder' }}
            </div>
            {% endif %}
          {% endif %}
        {% endfor %}
      </div>
    </div>
  </div>
</div>

<!-- モーダル -->
<div id="imageModal-{{ section.id }}" class="image-modal-{{ section.id }}">
  <button class="image-modal__close" aria-label="閉じる">&times;</button>
  <button class="image-modal__nav image-modal__nav--prev" aria-label="前の画像">
    <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
      <polyline points="15,18 9,12 15,6"></polyline>
    </svg>
  </button>
  <button class="image-modal__nav image-modal__nav--next" aria-label="次の画像">
    <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
      <polyline points="9,18 15,12 9,6"></polyline>
    </svg>
  </button>
  <div class="image-modal__content">
    {%- assign first_image = blank -%}
    {%- for block in section.blocks -%}
      {%- if block.type == 'image' and block.settings.image != blank -%}
        {%- assign first_image = block.settings.image -%}
        {%- break -%}
      {%- endif -%}
    {%- endfor -%}
    {%- if first_image != blank -%}
      <img class="image-modal__image" 
           src="{{ first_image | image_url: width: 2048 }}" 
           alt="{{ first_image.alt | escape }}" 
           width="{{ first_image.width }}" 
           height="{{ first_image.height }}" 
           loading="lazy">
    {%- else -%}
      <div style="width: 100%; height: 90vh; display: flex; align-items: center; justify-content: center; background: #f5f5f5;">
        {{ 'image' | placeholder_svg_tag: 'icon--placeholder' }}
      </div>
    {%- endif -%}
  </div>
</div>

<script>
(function() {
  const sectionId = '{{ section.id }}';
  const modal = document.getElementById('imageModal-' + sectionId);
  const modalImage = modal.querySelector('.image-modal__image');
  const closeBtn = modal.querySelector('.image-modal__close');
  const prevBtn = modal.querySelector('.image-modal__nav--prev');
  const nextBtn = modal.querySelector('.image-modal__nav--next');
  const imageTriggers = document.querySelectorAll('.look-image-trigger-' + sectionId);
  
  let currentIndex = 0;
  let images = [];
  let imageCache = {};

  // スワイプ検出用の変数
  let touchStartX = 0;
  let touchEndX = 0;
  let touchStartY = 0;
  let touchEndY = 0;
  const minSwipeDistance = 50;

  // 画像データを収集
  imageTriggers.forEach((trigger, index) => {
    const img = trigger.querySelector('img');
    if (img) {
      const largeSrc = img.getAttribute('data-large') || img.src;
      images.push({
        src: largeSrc,
        alt: img.alt
      });
      
      // 画像をプリロード（最初の3枚のみ）
      if (index < 3) {
        const preloadImg = new Image();
        preloadImg.src = largeSrc;
        imageCache[largeSrc] = preloadImg;
      }
    }
  });

  // 画像をプリロードする関数
  function preloadImage(src) {
    if (!imageCache[src]) {
      const img = new Image();
      img.src = src;
      imageCache[src] = img;
    }
    return imageCache[src];
  }

  // 画像を表示
  function showImage(index) {
    if (index < 0) index = images.length - 1;
    if (index >= images.length) index = 0;
    
    currentIndex = index;
    const imageData = images[index];
    
    // キャッシュされた画像があればすぐ表示
    if (imageCache[imageData.src] && imageCache[imageData.src].complete) {
      modalImage.src = imageData.src;
      modalImage.alt = imageData.alt;
      modalImage.classList.remove('loading');
    } else {
      // ローディング状態
      modalImage.classList.add('loading');
      modalImage.src = imageData.src;
      modalImage.alt = imageData.alt;
      
      modalImage.onload = function() {
        modalImage.classList.remove('loading');
      };
    }
    
    // 次の画像をプリロード
    if (index + 1 < images.length) {
      preloadImage(images[index + 1].src);
    }
    if (index - 1 >= 0) {
      preloadImage(images[index - 1].src);
    }
  }

  function handleSwipe() {
    const diffX = touchEndX - touchStartX;
    const diffY = touchEndY - touchStartY;
    
    // 横方向のスワイプが縦方向より大きい場合のみ処理
    if (Math.abs(diffX) > Math.abs(diffY) && Math.abs(diffX) > minSwipeDistance) {
      if (diffX > 0) {
        // 右スワイプ - 前へ
        showImage(currentIndex - 1);
      } else {
        // 左スワイプ - 次へ
        showImage(currentIndex + 1);
      }
    }
  }

  // モーダルを開く
  imageTriggers.forEach((trigger, index) => {
    trigger.addEventListener('click', function(e) {
      e.preventDefault();
      currentIndex = index;
      showImage(currentIndex);
      modal.classList.add('active');
      document.body.style.overflow = 'hidden';
    });
  });

  // モーダルを閉じる
  function closeModal() {
    modal.classList.remove('active');
    document.body.style.overflow = '';
  }

  closeBtn.addEventListener('click', closeModal);
  
  modal.addEventListener('click', function(e) {
    if (e.target === modal) {
      closeModal();
    }
  });

  // 前の画像
  prevBtn.addEventListener('click', function(e) {
    e.stopPropagation();
    showImage(currentIndex - 1);
  });

  // 次の画像
  nextBtn.addEventListener('click', function(e) {
    e.stopPropagation();
    showImage(currentIndex + 1);
  });

  // タッチイベント（スワイプ）
  const modalContent = modal.querySelector('.image-modal__content');
  
  modalContent.addEventListener('touchstart', function(e) {
    touchStartX = e.changedTouches[0].screenX;
    touchStartY = e.changedTouches[0].screenY;
  }, { passive: true });

  modalContent.addEventListener('touchend', function(e) {
    touchEndX = e.changedTouches[0].screenX;
    touchEndY = e.changedTouches[0].screenY;
    handleSwipe();
  }, { passive: true });

  // キーボード操作
  document.addEventListener('keydown', function(e) {
    if (!modal.classList.contains('active')) return;
    
    if (e.key === 'Escape') {
      closeModal();
    } else if (e.key === 'ArrowLeft') {
      showImage(currentIndex - 1);
    } else if (e.key === 'ArrowRight') {
      showImage(currentIndex + 1);
    }
  });
})();
</script>

{% schema %}
{
  "name": "Look",
  "class": "index-section",
  "settings": [
    {
      "type": "image_picker",
      "id": "top_image",
      "label": "Top Image"
    },
    {
      "type": "text",
      "id": "top_image_alt",
      "label": "Top Image Alt Text"
    },
    {
      "type": "header",
      "content": "Layout Settings"
    },
    {
      "type": "range",
      "id": "section_margin_top",
      "label": "Top Margin",
      "min": 0,
      "max": 100,
      "step": 5,
      "default": 0,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "section_margin_bottom",
      "label": "Bottom Margin",
      "min": 0,
      "max": 100,
      "step": 5,
      "default": 0,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "section_margin_left",
      "label": "Left Margin",
      "min": 0,
      "max": 100,
      "step": 5,
      "default": 0,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "section_margin_right",
      "label": "Right Margin",
      "min": 0,
      "max": 100,
      "step": 5,
      "default": 0,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "image_gap",
      "label": "Gap Between Images",
      "min": 0,
      "max": 50,
      "step": 5,
      "default": 0,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "pc_columns",
      "label": "PC Columns (Desktop)",
      "min": 2,
      "max": 6,
      "step": 1,
      "default": 4
    },
    {
      "type": "select",
      "id": "sp_columns",
      "label": "SP Columns (Mobile)",
      "options": [
        {
          "value": "1",
          "label": "1 Column"
        },
        {
          "value": "2",
          "label": "2 Columns"
        }
      ],
      "default": "2"
    }
  ],
  "max_blocks": 50,
  "blocks": [
    {
      "type": "image",
      "name": "Image",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "html",
          "id": "custom_html",
          "label": "Caption",
          "default": "<p></p>"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Look List 3",
      "category": "POST O'ALLS Look",
      "blocks": [
        {
          "type": "image"
        }
      ]
    }
  ]
}
{% endschema %}