<style>
  .look-page {
    position: relative;
    max-width: 100%;
    margin: 0 auto;
  }

  .look-page__header {
    padding: 3rem 0 2rem;
    text-align: center;
  }

  .look-page__header h1 {
    font-size: 2rem;
    font-weight: 300;
    letter-spacing: 0.1em;
    margin: 0;
    text-transform: uppercase;
  }

  .look-page__navigation {
    padding: 2rem 0;
    margin-bottom: 3rem;
    border-bottom: 1px solid rgba(var(--text-color), 0.1);
  }

  .look-page__thumbnails {
    display: flex;
    gap: 1rem;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    max-width: 100%;
    overflow-x: auto;
    padding: 0 2rem;
  }

  .look-page__thumbnail {
    flex-shrink: 0;
    width: 60px;
    height: 60px;
    border-radius: 4px;
    overflow: hidden;
    cursor: pointer;
    transition: all 0.2s ease;
    border: 1px solid transparent;
    opacity: 0.6;
  }

  .look-page__thumbnail.is-active {
    border-color: rgb(var(--text-color));
    opacity: 1;
  }

  .look-page__thumbnail:hover {
    opacity: 1;
  }

  .look-page__thumbnail img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .look-page__content {
    position: relative;
    max-width: 1400px;
    margin: 0 auto;
    padding: 0 2rem;
  }

  .look-page__look {
    display: none;
    grid-template-columns: 1fr;
    gap: 3rem;
    margin-bottom: 4rem;
  }

  .look-page__look.is-active {
    display: grid;
  }

  .look-page__image-container {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    background: #f8f8f8;
    border-radius: 8px;
    overflow: hidden;
  }

  .look-page__image {
    max-width: 100%;
    height: auto;
    display: block;
  }

  .look-page__nav-button {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: rgba(255, 255, 255, 0.9);
    border: none;
    border-radius: 50%;
    width: 44px;
    height: 44px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.2s ease;
    z-index: 2;
    box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);
  }

  .look-page__nav-button:hover {
    background: white;
    transform: translateY(-50%) scale(1.05);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
  }

  .look-page__nav-button--prev {
    left: 1rem;
  }

  .look-page__nav-button--next {
    right: 1rem;
  }

  .look-page__nav-button svg {
    width: 18px;
    height: 18px;
    fill: currentColor;
    color: #333;
  }

  .look-page__sidebar {
    display: grid;
    gap: 2rem;
  }

  .look-page__look-title {
    text-align: center;
    font-size: 1.25rem;
    font-weight: 300;
    letter-spacing: 0.1em;
    margin: 0;
    text-transform: uppercase;
    color: rgb(var(--text-color));
  }

  .look-page__products {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
    gap: 1.5rem;
  }

  .look-page__product-card {
    background: white;
    border: 1px solid rgba(var(--text-color), 0.08);
    border-radius: 6px;
    overflow: hidden;
    transition: all 0.25s ease;
    text-decoration: none;
    color: inherit;
    display: block;
  }

  .look-page__product-card:hover {
    border-color: rgba(var(--text-color), 0.2);
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.08);
    text-decoration: none;
    color: inherit;
  }

  .look-page__product-image {
    width: 100%;
    aspect-ratio: 1;
    object-fit: cover;
    background: #f8f8f8;
  }

  .look-page__product-image.placeholder {
    display: flex;
    align-items: center;
    justify-content: center;
    color: rgba(var(--text-color), 0.3);
  }

  .look-page__product-info {
    padding: 1rem;
  }

  .look-page__product-title {
    font-size: 0.8rem;
    font-weight: 400;
    margin: 0 0 0.5rem 0;
    line-height: 1.3;
    color: rgb(var(--text-color));
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .look-page__product-price {
    font-size: 0.8rem;
    color: rgba(var(--text-color), 0.7);
    margin: 0;
  }

  .look-page__product-price .price {
    font-weight: 500;
  }

  .look-page__product-price .price--compare {
    text-decoration: line-through;
    margin-right: 0.5rem;
    opacity: 0.6;
  }

  /* モバイル対応 */
  @media screen and (max-width: 767px) {
    .look-page__header {
      padding: 2rem 0 1.5rem;
    }

    .look-page__header h1 {
      font-size: 1.5rem;
    }

    .look-page__content {
      padding: 0 1rem;
    }

    .look-page__thumbnails {
      padding: 0 1rem;
      gap: 0.75rem;
    }

    .look-page__thumbnail {
      width: 50px;
      height: 50px;
    }

    .look-page__look {
      gap: 2rem;
      margin-bottom: 3rem;
    }

    .look-page__nav-button {
      width: 40px;
      height: 40px;
    }

    .look-page__nav-button--prev {
      left: 0.5rem;
    }

    .look-page__nav-button--next {
      right: 0.5rem;
    }

    .look-page__products {
      grid-template-columns: repeat(2, 1fr);
      gap: 1rem;
    }

    .look-page__navigation {
      padding: 1.5rem 0;
      margin-bottom: 2rem;
    }
  }

  /* タブレット対応 */
  @media screen and (min-width: 768px) {
    .look-page__look {
      grid-template-columns: 2fr 1fr;
      gap: 4rem;
      align-items: start;
    }

    .look-page__products {
      grid-template-columns: 1fr;
      gap: 1rem;
    }

    .look-page__thumbnails {
      gap: 1.25rem;
    }

    .look-page__thumbnail {
      width: 70px;
      height: 70px;
    }
  }

  /* デスクトップ対応 */
  @media screen and (min-width: 1024px) {
    .look-page__products {
      grid-template-columns: repeat(2, 1fr);
    }

    .look-page__thumbnail {
      width: 80px;
      height: 80px;
    }
  }

  @media screen and (min-width: 1200px) {
    .look-page__look {
      gap: 5rem;
    }
  }
</style>

<div class="look-page color-scheme color-scheme--{{ section.settings.color_scheme.id }}">
  <div class="look-page__header container">
    <h1>{{ page.title }}</h1>
  </div>

  {%- assign valid_looks = '' | split: '' -%}
  {%- for block in section.blocks -%}
    {%- if block.settings.image != blank -%}
      {%- assign valid_looks = valid_looks | append: block -%}
    {%- endif -%}
  {%- endfor -%}

  {%- if valid_looks.size > 1 -%}
    <div class="look-page__navigation">
      <div class="look-page__thumbnails">
        {%- assign index = 0 -%}
        {%- for block in section.blocks -%}
          {%- if block.settings.image != blank -%}
            <div class="look-page__thumbnail {% if index == 0 %}is-active{% endif %}" 
                 data-look-index="{{ index }}" 
                 data-block-id="{{ block.id }}">
              {{ block.settings.image | image_url: width: 200 | image_tag: alt: block.settings.title, loading: 'lazy' }}
            </div>
            {%- assign index = index | plus: 1 -%}
          {%- endif -%}
        {%- endfor -%}
      </div>
    </div>
  {%- endif -%}

  <div class="look-page__content" id="look-page-content">
    {%- assign index = 0 -%}
    {%- for block in section.blocks -%}
      {%- if block.settings.image != blank -%}
        <div class="look-page__look {% if index == 0 %}is-active{% endif %}" 
             data-look-index="{{ index }}" 
             data-block-id="{{ block.id }}"
             {{ block.shopify_attributes }}>
          
          <div class="look-page__image-container">
            {%- if valid_looks.size > 1 -%}
              <button class="look-page__nav-button look-page__nav-button--prev" data-action="prev-look" type="button">
                <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M15 18L9 12L15 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
              </button>
              <button class="look-page__nav-button look-page__nav-button--next" data-action="next-look" type="button">
                <svg viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M9 18L15 12L9 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
              </button>
            {%- endif -%}
            
            {{ block.settings.image | image_url: width: 1200 | image_tag: class: 'look-page__image', alt: block.settings.title, loading: 'lazy' }}
          </div>

          <div class="look-page__sidebar">
            {%- if block.settings.title != blank -%}
              <h2 class="look-page__look-title">{{ block.settings.title }}</h2>
            {%- endif -%}

            <div class="look-page__products">
              {%- for i in (1..6) -%}
                {%- assign product_key = 'product_' | append: i -%}
                {%- assign product = all_products[block.settings[product_key]] -%}
                
                {%- if product and product != empty -%}
                  <a href="{{ product.url }}" class="look-page__product-card">
                    {%- if product.featured_image -%}
                      {{ product.featured_image | image_url: width: 400 | image_tag: class: 'look-page__product-image', alt: product.title, loading: 'lazy' }}
                    {%- else -%}
                      <div class="look-page__product-image placeholder">
                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                          <rect x="3" y="3" width="18" height="18" rx="2" stroke="currentColor" stroke-width="2"/>
                          <circle cx="8.5" cy="8.5" r="1.5" stroke="currentColor" stroke-width="2"/>
                          <path d="M21 15L16 10L5 21" stroke="currentColor" stroke-width="2"/>
                        </svg>
                      </div>
                    {%- endif -%}
                    
                    <div class="look-page__product-info">
                      <h3 class="look-page__product-title">{{ product.title }}</h3>
                      <div class="look-page__product-price">
                        {%- if product.compare_at_price > product.price -%}
                          <span class="price price--compare">{{ product.compare_at_price | money }}</span>
                        {%- endif -%}
                        <span class="price">{{ product.price | money }}</span>
                      </div>
                    </div>
                  </a>
                {%- endif -%}
              {%- endfor -%}
            </div>
          </div>
        </div>
        {%- assign index = index | plus: 1 -%}
      {%- endif -%}
    {%- endfor -%}
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const lookPageContent = document.getElementById('look-page-content');
  if (!lookPageContent) return;

  let currentIndex = 0;
  const looks = Array.from(lookPageContent.querySelectorAll('.look-page__look'));
  const thumbnails = Array.from(document.querySelectorAll('.look-page__thumbnail'));
  const prevButtons = Array.from(document.querySelectorAll('[data-action="prev-look"]'));
  const nextButtons = Array.from(document.querySelectorAll('[data-action="next-look"]'));

  function showLook(index) {
    if (index < 0 || index >= looks.length) return;

    currentIndex = index;

    // LOOKの表示切り替え
    looks.forEach((look, i) => {
      if (i === index) {
        look.classList.add('is-active');
        look.style.display = 'grid';
      } else {
        look.classList.remove('is-active');
        look.style.display = 'none';
      }
    });

    // サムネイルのアクティブ状態切り替え
    thumbnails.forEach((thumbnail, i) => {
      if (i === index) {
        thumbnail.classList.add('is-active');
      } else {
        thumbnail.classList.remove('is-active');
      }
    });

    // アクティブなサムネイルを表示範囲内にスクロール
    if (thumbnails[index]) {
      thumbnails[index].scrollIntoView({
        behavior: 'smooth',
        block: 'nearest',
        inline: 'center'
      });
    }
  }

  function showPreviousLook() {
    const newIndex = currentIndex > 0 ? currentIndex - 1 : looks.length - 1;
    showLook(newIndex);
  }

  function showNextLook() {
    const newIndex = currentIndex < looks.length - 1 ? currentIndex + 1 : 0;
    showLook(newIndex);
  }

  // サムネイルクリックイベント
  thumbnails.forEach((thumbnail, index) => {
    thumbnail.addEventListener('click', function() {
      showLook(index);
    });
  });

  // ナビゲーションボタンイベント
  prevButtons.forEach(button => {
    button.addEventListener('click', function(e) {
      e.preventDefault();
      showPreviousLook();
    });
  });

  nextButtons.forEach(button => {
    button.addEventListener('click', function(e) {
      e.preventDefault();
      showNextLook();
    });
  });

  // キーボードナビゲーション
  document.addEventListener('keydown', function(e) {
    if (e.key === 'ArrowLeft') {
      showPreviousLook();
    } else if (e.key === 'ArrowRight') {
      showNextLook();
    }
  });

  // 初期化
  showLook(0);
});
</script>

{% schema %}
{
  "name": "Look Page",
  "class": "shopify-section--look-page",
  "tag": "section",
  "settings": [
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "Color scheme",
      "default": "scheme-1"
    }
  ],
  "blocks": [
    {
      "type": "look",
      "name": "Look",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Look Image"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Look Title",
          "default": "LOOK 01"
        },
        {
          "type": "product",
          "id": "product_1",
          "label": "Product 1"
        },
        {
          "type": "product",
          "id": "product_2",
          "label": "Product 2"
        },
        {
          "type": "product",
          "id": "product_3",
          "label": "Product 3"
        },
        {
          "type": "product",
          "id": "product_4",
          "label": "Product 4"
        },
        {
          "type": "product",
          "id": "product_5",
          "label": "Product 5"
        },
        {
          "type": "product",
          "id": "product_6",
          "label": "Product 6"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Look Page",
      "blocks": [
        {
          "type": "look"
        }
      ]
    }
  ]
}
{% endschema %}