<div class="look-combined-section">
  {% for i in (1..5) %}
    {% assign layout_setting = 'layout_' | append: i %}
    {% assign layout = section.settings[layout_setting] %}
    
    {% unless layout == 'hidden' %}
      {% assign bg_color_setting = 'background_color_' | append: i %}
      {% assign text_color_setting = 'text_color_' | append: i %}
      {% assign padding_top_setting = 'padding_top_' | append: i %}
      {% assign padding_bottom_setting = 'padding_bottom_' | append: i %}
      
      <div class="look-combined-item" style="
        background-color: {{ section.settings[bg_color_setting] }};
        color: {{ section.settings[text_color_setting] }};
        padding-top: {{ section.settings[padding_top_setting] }}px;
        padding-bottom: {{ section.settings[padding_bottom_setting] }}px;
      ">
        {% if layout == 'full_image' %}
          <!-- Full Image Layout -->
          {% assign image_setting = 'image_' | append: i %}
          {% assign height_setting = 'image_height_' | append: i %}
          {% assign parallax_setting = 'enable_parallax_' | append: i %}
          {% assign overlay_setting = 'overlay_opacity_' | append: i %}
          
          <div class="look-full-image-container height-{{ section.settings[height_setting] }}{% if section.settings[parallax_setting] %} parallax-enabled{% endif %}">
            {% if section.settings[image_setting] != blank %}
              <div class="look-full-image-wrapper">
                <img 
                  src="{{ section.settings[image_setting] | image_url: width: 1920 }}"
                  srcset="
                    {{ section.settings[image_setting] | image_url: width: 768 }} 768w,
                    {{ section.settings[image_setting] | image_url: width: 1024 }} 1024w,
                    {{ section.settings[image_setting] | image_url: width: 1440 }} 1440w,
                    {{ section.settings[image_setting] | image_url: width: 1920 }} 1920w,
                    {{ section.settings[image_setting] | image_url: width: 2400 }} 2400w
                  "
                  sizes="100vw"
                  width="{{ section.settings[image_setting].width }}"
                  height="{{ section.settings[image_setting].height }}"
                  alt="{{ section.settings[image_setting].alt | default: 'Look image' }}"
                  loading="lazy"
                  class="look-full-image{% if section.settings[parallax_setting] %} parallax-image{% endif %}"
                >
                {% if section.settings[overlay_setting] > 0 %}
                  <div class="look-full-image-overlay" style="opacity: {{ section.settings[overlay_setting] | divided_by: 100.0 }}"></div>
                {% endif %}
              </div>
            {% else %}
              <div class="look-full-image-placeholder height-{{ section.settings[height_setting] }}">
                <div class="placeholder-content">
                  <svg width="80" height="80" fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 80 80">
                    <rect width="80" height="80" rx="6" fill="currentColor" fill-opacity="0.1"/>
                    <rect x="16" y="24" width="48" height="32" rx="3" stroke="currentColor" stroke-width="2" fill="none"/>
                    <circle cx="30" cy="34" r="4" stroke="currentColor" stroke-width="2" fill="none"/>
                    <path d="m60 48-6-6-10 10-6-6-4 4" stroke="currentColor" stroke-width="2" fill="none"/>
                  </svg>
                </div>
              </div>
            {% endif %}
          </div>
          
        {% else %}
          <!-- Split Layout -->
          <div class="page-width">
            <div class="look-split-content layout-{{ layout }}">
              <div class="look-split-text">
                {% assign title_setting = 'title_' | append: i %}
                {% assign heading_tag_setting = 'heading_tag_' | append: i %}
                {% assign text_setting = 'text_' | append: i %}
                
                {% if section.settings[title_setting] != blank %}
                  {% assign title_tag = section.settings[heading_tag_setting] | default: 'h2' %}
                  <{{ title_tag }} class="look-split-title">{{ section.settings[title_setting] }}</{{ title_tag }}>
                {% endif %}
                
                {% if section.settings[text_setting] != blank %}
                  <div class="look-split-description">
                    {{ section.settings[text_setting] | newline_to_br }}
                  </div>
                {% endif %}
                
                {% assign has_products = false %}
                {% for j in (1..8) %}
                  {% assign product_key = 'product_' | append: i | append: '_' | append: j %}
                  {% if section.settings[product_key] != blank %}
                    {% assign has_products = true %}
                    {% break %}
                  {% endif %}
                {% endfor %}
  ],
  "presets": [
    {
      "name": "Look Combined",
      "category": "Look"
    }
  ]
}
{% endschema %}
                
                {% if has_products %}
                  <div class="look-split-products">
                    {% for j in (1..8) %}
                      {% assign product_key = 'product_' | append: i | append: '_' | append: j %}
                      {% assign product = section.settings[product_key] %}
                      {% if product != blank %}
                        <p class="product-item">
                          <a href="{{ product.url }}" class="product-link">
                            {{ product.title }} {{ product.price | money }}
                          </a>
                        </p>
                      {% endif %}
                    {% endfor %}
                  </div>
                {% endif %}
              </div>
              
              <div class="look-split-image">
                {% assign image_setting = 'image_' | append: i %}
                {% if section.settings[image_setting] != blank %}
                  {% assign image_alt = section.settings[image_setting].alt | default: section.settings[title_setting] %}
                  <img 
                    src="{{ section.settings[image_setting] | image_url: width: 800 }}"
                    srcset="
                      {{ section.settings[image_setting] | image_url: width: 400 }} 400w,
                      {{ section.settings[image_setting] | image_url: width: 600 }} 600w,
                      {{ section.settings[image_setting] | image_url: width: 800 }} 800w,
                      {{ section.settings[image_setting] | image_url: width: 1000 }} 1000w
                    "
                    sizes="(max-width: 768px) 100vw, 50vw"
                    width="{{ section.settings[image_setting].width }}"
                    height="{{ section.settings[image_setting].height }}"
                    alt="{{ image_alt }}"
                    loading="lazy"
                    class="look-split-img"
                  >
                {% else %}
                  <div class="look-split-placeholder">
                    <svg width="60" height="60" fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 60 60">
                      <rect width="60" height="60" rx="4" fill="currentColor" fill-opacity="0.1"/>
                      <rect x="12" y="18" width="36" height="24" rx="2" stroke="currentColor" stroke-width="1.5" fill="none"/>
                      <circle cx="22" cy="26" r="3" stroke="currentColor" stroke-width="1.5" fill="none"/>
                      <path d="m45 35-5-5-8 8-4-4-3 3" stroke="currentColor" stroke-width="1.5" fill="none"/>
                    </svg>
                  </div>
                {% endif %}
              </div>
            </div>
          </div>
        {% endif %}
      </div>
    {% endunless %}
  {% endfor %}
</div>

<style>
  .look-combined-section {
    width: 100%;
  }
  
  .page-width {
    max-width: var(--page-width, 1200px);
    margin: 0 auto;
    padding-left: var(--page-padding, 2rem);
    padding-right: var(--page-padding, 2rem);
  }
  
  @media screen and (max-width: 768px) {
    .page-width {
      padding-left: var(--page-padding-mobile, 1.5rem);
      padding-right: var(--page-padding-mobile, 1.5rem);
    }
  }
  
  @media screen and (max-width: 480px) {
    .page-width {
      padding-left: var(--page-padding-mobile, 1rem);
      padding-right: var(--page-padding-mobile, 1rem);
    }
  }
  
  /* Full Image Styles */
  .look-full-image-container {
    position: relative;
    width: 100vw;
    margin-left: calc(-50vw + 50%);
    overflow: hidden;
  }
  
  .look-full-image-wrapper {
    position: relative;
    width: 100%;
    height: 100%;
  }
  
  .look-full-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
  }
  
  .look-full-image-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.3);
    pointer-events: none;
  }
  
  .height-small {
    height: 40vh;
    min-height: 300px;
  }
  
  .height-medium {
    height: 60vh;
    min-height: 400px;
  }
  
  .height-large {
    height: 80vh;
    min-height: 500px;
  }
  
  .height-full {
    height: 100vh;
    min-height: 600px;
  }
  
  .parallax-enabled {
    overflow: hidden;
  }
  
  .parallax-image {
    will-change: transform;
    transform: translateZ(0);
  }
  
  .look-full-image-placeholder {
    background-color: #f5f5f5;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .placeholder-content {
    text-align: center;
    color: #999;
  }
  
  /* Split Layout Styles */
  .look-split-content {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 60px;
    align-items: start;
    min-height: 500px;
  }
  
  .layout-text_left {
    grid-template-areas: "text image";
  }
  
  .layout-text_left .look-split-text {
    grid-area: text;
  }
  
  .layout-text_left .look-split-image {
    grid-area: image;
  }
  
  .layout-text_right {
    grid-template-areas: "image text";
  }
  
  .layout-text_right .look-split-text {
    grid-area: text;
  }
  
  .layout-text_right .look-split-image {
    grid-area: image;
  }
  
  .look-split-text {
    padding: 0;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
  }
  
  .look-split-title {
    margin: 0 0 20px 0;
    line-height: 1.4;
    letter-spacing: 0.02em;
  }
  
  .look-split-description {
    line-height: 1.6;
    margin: 0 0 24px 0;
    opacity: 0.9;
  }
  
  .look-split-products {
    padding-top: 0;
    margin-top: auto;
  }
  
  .look-split-text:has(.look-split-title, .look-split-description) .look-split-products {
    margin-top: 16px;
  }
  
  .product-item {
    margin: 6px 0;
    opacity: 0.8;
  }
  
  .product-link {
    color: inherit;
    text-decoration: none;
    transition: opacity 0.3s ease;
  }
  
  .product-link:hover {
    opacity: 0.6;
    text-decoration: underline;
  }
  
  .look-split-image {
    position: relative;
    height: 100%;
    min-height: 400px;
  }
  
  .look-split-img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 0;
  }
  
  .look-split-placeholder {
    width: 100%;
    height: 400px;
    background-color: #f5f5f5;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #999;
    border: 2px dashed #e0e0e0;
  }
  
  .look-split-placeholder svg {
    opacity: 0.5;
  }
  
  @media screen and (max-width: 768px) {
    .height-small {
      height: 30vh;
      min-height: 250px;
    }
    
    .height-medium {
      height: 40vh;
      min-height: 300px;
    }
    
    .height-large {
      height: 50vh;
      min-height: 350px;
    }
    
    .height-full {
      height: 70vh;
      min-height: 400px;
    }
    
    .look-split-content {
      grid-template-columns: 1fr;
      gap: 32px;
    }
    
    .layout-text_left,
    .layout-text_right {
      grid-template-areas: 
        "image"
        "text";
    }
    
    .look-split-image {
      min-height: 300px;
    }
  }
  
  @media screen and (max-width: 480px) {
    .height-small {
      height: 25vh;
      min-height: 200px;
    }
    
    .height-medium {
      height: 35vh;
      min-height: 250px;
    }
    
    .height-large {
      height: 45vh;
      min-height: 300px;
    }
    
    .height-full {
      height: 60vh;
      min-height: 350px;
    }
    
    .look-split-content {
      gap: 24px;
    }
  }
  
  /* パララックス効果用のJavaScript */
  @media (prefers-reduced-motion: no-preference) {
    .parallax-enabled .parallax-image {
      transition: transform 0.1s ease-out;
    }
  }
</style>

<script>
  // パララックス効果
  document.addEventListener('DOMContentLoaded', function() {
    const parallaxImages = document.querySelectorAll('.parallax-image');
    
    if (parallaxImages.length > 0 && !window.matchMedia('(prefers-reduced-motion: reduce)').matches) {
      function updateParallax() {
        parallaxImages.forEach(function(image) {
          const container = image.closest('.parallax-enabled');
          const rect = container.getBoundingClientRect();
          const speed = 0.5;
          
          if (rect.bottom >= 0 && rect.top <= window.innerHeight) {
            const yPos = -(rect.top * speed);
            image.style.transform = `translateY(${yPos}px)`;
          }
        });
      }
      
      window.addEventListener('scroll', updateParallax, { passive: true });
      window.addEventListener('resize', updateParallax, { passive: true });
      updateParallax();
    }
  });
</script>

{% schema %}
{
  "name": "Look Combined",
  "settings": [
    {% for i in (1..5) %}
      {
        "type": "header",
        "content": "Section {{ i }}"
      },
      {
        "type": "select",
        "id": "layout_{{ i }}",
        "label": "Layout {{ i }}",
        "options": [
          {
            "value": "hidden",
            "label": "Hidden"
          },
          {
            "value": "text_left",
            "label": "Text Left, Image Right"
          },
          {
            "value": "text_right",
            "label": "Text Right, Image Left"
          },
          {
            "value": "full_image",
            "label": "Full Image"
          }
        ],
        "default": "hidden"
      },
      {
        "type": "image_picker",
        "id": "image_{{ i }}",
        "label": "Image {{ i }}"
      },
      {% unless i == 5 %}
        {
          "type": "text",
          "id": "title_{{ i }}",
          "label": "Title {{ i }}",
          "info": "Only for Split layouts"
        },
        {
          "type": "select",
          "id": "heading_tag_{{ i }}",
          "label": "Heading Tag {{ i }}",
          "options": [
            {
              "value": "h1",
              "label": "H1"
            },
            {
              "value": "h2",
              "label": "H2"
            },
            {
              "value": "h3",
              "label": "H3"
            },
            {
              "value": "h4",
              "label": "H4"
            },
            {
              "value": "h5",
              "label": "H5"
            },
            {
              "value": "h6",
              "label": "H6"
            }
          ],
          "default": "h2",
          "info": "Only for Split layouts"
        },
        {
          "type": "textarea",
          "id": "text_{{ i }}",
          "label": "Description {{ i }}",
          "info": "Only for Split layouts"
        },
        {% for j in (1..8) %}
          {
            "type": "product",
            "id": "product_{{ i }}_{{ j }}",
            "label": "Product {{ i }}-{{ j }}",
            "info": "Only for Split layouts"
          }{% unless j == 8 %},{% endunless %}
        {% endfor %},
      {% else %}
        {
          "type": "text",
          "id": "title_{{ i }}",
          "label": "Title {{ i }}",
          "info": "Only for Split layouts"
        },
        {
          "type": "select",
          "id": "heading_tag_{{ i }}",
          "label": "Heading Tag {{ i }}",
          "options": [
            {
              "value": "h1",
              "label": "H1"
            },
            {
              "value": "h2",
              "label": "H2"
            },
            {
              "value": "h3",
              "label": "H3"
            },
            {
              "value": "h4",
              "label": "H4"
            },
            {
              "value": "h5",
              "label": "H5"
            },
            {
              "value": "h6",
              "label": "H6"
            }
          ],
          "default": "h2",
          "info": "Only for Split layouts"
        },
        {
          "type": "textarea",
          "id": "text_{{ i }}",
          "label": "Description {{ i }}",
          "info": "Only for Split layouts"
        },
        {% for j in (1..8) %}
          {
            "type": "product",
            "id": "product_{{ i }}_{{ j }}",
            "label": "Product {{ i }}-{{ j }}",
            "info": "Only for Split layouts"
          }{% unless j == 8 %},{% endunless %}
        {% endfor %},
      {% endunless %}
      {
        "type": "select",
        "id": "image_height_{{ i }}",
        "label": "Image Height {{ i }}",
        "options": [
          {
            "value": "small",
            "label": "Small (40vh)"
          },
          {
            "value": "medium",
            "label": "Medium (60vh)"
          },
          {
            "value": "large",
            "label": "Large (80vh)"
          },
          {
            "value": "full",
            "label": "Full Screen (100vh)"
          }
        ],
        "default": "large",
        "info": "Only for Full Image layout"
      },
      {
        "type": "checkbox",
        "id": "enable_parallax_{{ i }}",
        "label": "Enable Parallax {{ i }}",
        "default": false,
        "info": "Only for Full Image layout"
      },
      {
        "type": "range",
        "id": "overlay_opacity_{{ i }}",
        "min": 0,
        "max": 80,
        "step": 5,
        "unit": "%",
        "label": "Overlay Opacity {{ i }}",
        "default": 0,
        "info": "Only for Full Image layout"
      },
      {
        "type": "color",
        "id": "background_color_{{ i }}",
        "label": "Background Color {{ i }}",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "id": "text_color_{{ i }}",
        "label": "Text Color {{ i }}",
        "default": "#333333"
      },
      {
        "type": "range",
        "id": "padding_top_{{ i }}",
        "min": 0,
        "max": 150,
        "step": 10,
        "unit": "px",
        "label": "Padding Top {{ i }}",
        "default": 60
      },
      {
        "type": "range",
        "id": "padding_bottom_{{ i }}",
        "min": 0,
        "max": 150,
        "step": 10,
        "unit": "px",
        "label": "Padding Bottom {{ i }}",
        "default": 60
      }{% unless i == 5 %},{% endunless %}